#include <iarduino_OLED_txt.h>

#define START_BUTTON 3
#define P1 14
#define P1_C 13
#define P2 15
#define P2_C 12
#define P3 16
#define P3_C 11

#define INF 5

iarduino_OLED_txt myOLED(0x3C);

extern uint8_t SmallFontRus[];
void setup() {
  myOLED.begin();
  myOLED.setFont(SmallFontRus);


  pinMode(START_BUTTON, INPUT_PULLUP);

  Serial.begin(9600);

  myOLED.clrScr();
  myOLED.print("Транзистор Тестер", 0, 0);
  myOLED.setCoding(TXT_UTF8);
  myOLED.print("Нажмите кнопку...", OLED_C, 4);
}

void loop() {

  if (!digitalRead(START_BUTTON)) {
    runTest();
  }

}

void runTest() {
  myOLED.clrScr();
  myOLED.print("Транзистор Тестер", 0, 0);
  myOLED.setCoding(TXT_UTF8);
  myOLED.print("Тестирование...", OLED_C, 4);
  // String result = testDiodes();

  String result = testTransistors();
  myOLED.clrScr();
  char transistor[15];
  for (byte i = 0; i < 15; i++) {
    transistor[i] = result[i];
  }
  transistor[15] = NULL;
  myOLED.print(transistor, 0, 0);

  String pinout = "";
  for (byte i = 15; i < result.length(); i++) {
    pinout += String( result[i]);
  }
  myOLED.print(pinout, 1, 1);
  delay(500);
}


String testDiodes() {

  pinMode(P1_C, OUTPUT);
  pinMode(P1, INPUT);
  pinMode(P2, INPUT);
  digitalWrite(P1_C, HIGH);
  digitalWrite(P2, LOW);
  int inOut = analogRead(P1) - analogRead(P2);
  float Vio = (inOut * 4.77) / 1023;

  if (Vio < 3) {
    String out = "Diode: 1 ->|- 2 " + String(Vio) + "V";
    return out;
    digitalWrite(P1_C, LOW);
  }

  return "No part!";
}

String testTransistors() {
  /*
    Мультиметр подключен к выводу 1 (+) и 2 (-): “OL”
    Мультиметр подключен к выводу 1 (-) и 2 (+): “OL”
    Мультиметр подключен к выводу 1 (+) и 3 (-): 0.655 V
    Мультиметр подключен к выводу 1 (-) и 3 (+): “OL”
    Мультиметр подключен к выводу 2 (+) и 3 (-): 0.621 V
    Мультиметр подключен к выводу 2 (-) и 3 (+): “OL”
  */
  float tests[] = {0, 0, 0, 0, 0, 0};

  byte base = 0;
  byte collector = 0;
  byte emitter = 0;
  String transistor_type = "NOT";

  tests[0] = voltageDrop(P1_C, P1, P2);
  tests[1] = voltageDrop(P2_C, P2, P1);
  tests[2] = voltageDrop(P1_C, P1, P3);
  tests[3] = voltageDrop(P3_C, P3, P1);
  tests[4] = voltageDrop(P2_C, P2, P3);
  tests[5] = voltageDrop(P3_C, P3, P2);
  //
  //  if (tests[0] == 5 && tests[2] == 5 && tests[1] < 1 && tests[4] < 1 && tests[3] < 1 && tests[5] < 1) {
  //    base = 1;
  //    transistor_type = "PNP";
  //  }
  //  else if (tests[0] < 1 && tests[1] < 1 && tests[2] < 1 && tests[3] == 5 && tests[4] < 1 && tests[5] == 5) {
  //    base = 3;
  //    transistor_type = "PNP";
  //  }
  if (tests[1] < 1 && tests[4] < 1) {
    base = 2;

    if (tests[1] > tests[4]) {
      collector = 3;
      emitter = 1;
    }
    else {
      collector = 1;
      emitter = 3;
    }


    transistor_type = "NPN";
  }
  else if (tests[0] != 5 && tests[2] != 5) {
    base = 1;

    pinMode(P1_C, OUTPUT);
    pinMode(P2_C, OUTPUT);
    pinMode(P1, OUTPUT);
    pinMode(P2, OUTPUT);
    pinMode(P3, INPUT);

    digitalWrite(P1_C, HIGH);
    digitalWrite(P2_C, HIGH);
    if (!digitalRead(P3)) {
      collector = 2;
      emitter = 3;
    }
    else {
      collector = 3;
      emitter = 2;
    }
    digitalWrite(P1_C, LOW);
    digitalWrite(P2_C, LOW);

    transistor_type = "NPN";
  }
  else if (tests[3] != 5 && tests[5] != 5) {
    base = 3;

    pinMode(P3_C, OUTPUT);
    pinMode(P2_C, OUTPUT);
    pinMode(P3, OUTPUT);
    pinMode(P2, OUTPUT);
    pinMode(P1, INPUT);

    digitalWrite(P3_C, HIGH);
    digitalWrite(P2_C, HIGH);
    if (!digitalRead(P1)) {
      collector = 2;
      emitter = 1;
    }
    else {
      collector = 1;
      emitter = 2;
    }
    digitalWrite(P2_C, LOW);
    digitalWrite(P3_C, LOW);

    transistor_type = "NPN";
  }



  for (byte i = 0; i < 6; i++) {
    Serial.println(tests[i]);
  }
  Serial.println("Base: " + String(base));
  Serial.println(transistor_type);
  return "Transistor: " + transistor_type + "B: " + String(base) + " C: " + String(collector) + " E: " + String(emitter);

}

float voltageDrop(byte charge_pin, byte first_p, byte second_p) {
  pinMode(charge_pin, OUTPUT);
  pinMode(first_p, INPUT);
  pinMode(second_p, INPUT);

  digitalWrite(charge_pin, HIGH);

  float result = 0.0000000;
  result = (((analogRead(first_p) - analogRead(second_p)) * 4.77777) / 1023);
  Serial.println(result);

  digitalWrite(charge_pin, LOW);
  pinMode(first_p, OUTPUT);
  pinMode(second_p, OUTPUT);

  return (result < 1) ? result : INF;
}
